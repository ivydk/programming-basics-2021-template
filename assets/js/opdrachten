// EXERCISE (SELF PACED) 23 sep
// 1. Declaring with variables
let firstName = "Ivy";
let lastName = "Dekker";
let age = "18";

console.log(`Hello, I am ${firstName} ${lastName} and I am ${age} years old`)

// 2. Calculate
let priceOfAnApple = 0.59;
let numberOfApples = 200.0;
let price = priceOfAnApple * numberOfApples;
console.log(numberOfApples + " apples will cost â‚¬" + price)

// 3.  Pythagorean Theorem
const a = 5;
const b = 6;
let c;

c = (a * a) + (b * b)

console.log(c)

// 4. Strings
let sentence = "Please visit the HZ University of Applied Sciences";
sentence = sentence.replace("Applied", "Mad");
console.log(sentence);


// ASSIGNMENTS (FOR FEEDBACK)
// 1. JavaScript expression
function evenOrOdd(number) {
    if (number % 2 === 0) {
        console.log("This is an even number");
    } else {
        console.log("This isn't an even number");
    }
}

let number = evenOrOdd(10);

// 2. String expression
let sentenceProgramming = "Programming is not so cool";
sentenceProgrammingChanged = sentenceProgramming.replace(" not", "");
console.log(sentenceProgrammingChanged);

// 28 sept in de les 
let a = 100;
let b = 3;
let c = 150;

if (a > c) {
    let x = c;
    c = a;
    a = x;
}

if (b < a) {
    let y = a;
    a = b;
    b = y;
}

if (c < b) {
    let z = b;
    b = c;
    c = z;
}

console.log(a, b, c);

// OPDRACHTEN 29 sept

// BMI opdracht in de les 
let height = prompt("What's your height?");
let weight = prompt("What's your weight?");

bmi = weight / (height * height);

console.log(bmi);

if (bmi < 18.5) {
    console.log("Classification: Under weight")
    console.log("Sport: Start with personal trainer")
} else if (bmi < 25) {
    console.log("Classification: Normal weight")
    console.log("Sport: Start with any programme")
} else if (bmi < 30) {
    console.log("Classification: Slightly over weight")
    console.log("Sport: Start with cardio training")
} else {
    console.log("Classification: Obese")
    console.log("Sport: Sport: Start with personal trainer")
}

// 1. Using input from the prompt
let firstName = prompt("What's your name?");

if (firstName === "Alice" || firstName === "Bob") {
    console.log("Some nice greetings");
} else {
    console.log("Your not Alice or Bob :(")
}

// 2. Simple if-else statement
const purchasedBook = true;
const job = "teacher";
const inTrain = true;
let message2;

if (job === "teacher" && inTrain === true && purchasedBook === true) {
    message2 = "Finally I can enjoy my book!";
} else {
    message2 = "I can't enjoy my book";
}

console.log(message2);

// 3. Grades
const grade = prompt("What's your grade?");
let message3;

if (grade < 0.9 || grade > 10) {
    message3 = "I don't know this grade, please try again"
} else if (grade < 6) {
    message3 = "Insufficient";
} else if (grade < 7) {
    message3 = "Sufficient";
} else if (grade < 9) {
    message3 = "Good";
} else if (gade < 10) {
    message3 = "Excellent";
}

console.log(message3)

// 4. Number of days in a month
const year = prompt("What year?");
const month = prompt("What month");
const leapYear = year % 4;
let message4;

if (month === "1") {
    message4 = "January has 31 days in " + year;
} else if (month === "2") {
    if (leapYear === 0) {
        message4 = "February has 29 days in " + year;
    } else {
        message4 = "February has 28 days in " + year;
    }
} else if (month === "3") {
    message4 = "March has 31 days in " + year;
} else if (month === "4") {
    message4 = "April has 30 days in " + year;
} else if (month === "5") {
    message4 = "May has 31 days in " + year;
} else if (month === "6") {
    message4 = "June has 30 days in " + year;
} else if (month === "7") {
    message4 = "July  has 31 days in " + year;
} else if (month === "8") {
    message4 = "August  has 31 days in " + year;
} else if (month === "9") {
    message4 = "September has 30 days in " + year;
} else if (month === "10") {
    message4 = "October has 31 days in " + year;
} else if (month === "11") {
    message4 = "November has 30 days in " + year;
} else if (month === "12") {
    message4 = "December has 31 days in " + year;
} else {
    message4 = "i don't know this month, try again";
}

// opdracht 29sep
let x = 5;
let y = 5.0;

if (5 == 5.0) {
    console.log("1a. waar");
} else {
    console.log("1a. niet waar");
}

if (x === y) {
    console.log("1b. waar");
} else {
    console.log("1b. niet waar");
}
if (10 == "10") {
    console.log("2a. waar");
} else {
    console.log("2a. niet waar");
}

if (10 === "10") {
    console.log("2b. waar");
} else {
    console.log("2b. niet waar");
}

if (20 == "hoe werkt dit") {
    console.log("3a. waar");
} else {
    console.log("3a. niet waar");
}

if (20 === "hoe werkt dit") {
    console.log("3b. waar");
} else {
    console.log("3b. niet waar");
}

// Opdracht in de les 30sept 
let i;
do {
    i = prompt("Give me a number")
} while (i <= 100 && i != null)
console.log(i);


// 30sept output prime numbers
const n = prompt("give me a numeber");
let mayBePrime = true;

for (let i = 2; i <= n; i++) {
    // console.log(i) 
    // Is this number (i) a prime? 
    for (let j = 2; j < i && mayBePrime; j++) {
        // console.log("for prime " + i + " checking " + j);
        // check if divisible without rest 
        if (i % j === 0) {
            // not prime! Stop the loop
            mayBePrime = false;
        }
    }
    if (mayBePrime) {
        console.log("found a prime: " + i)
    }
    mayBePrime = true;
}
// 1. How does the modulus operator work
let highestNumber = 400;
let lowestNumber = 100;

while (lowestNumber <= highestNumber) {
    if (highestNumber % 3 === 0) {
        console.log(highestNumber);
    }
    highestNumber--;
}


// 3. First example of array

let niceNumber = [2, 4, 8, 9, 12, 13];
let total = 0;

for (let i = 0; i < niceNumber.length; i++) {
    total = niceNumber[i] + total;
}

console.log(total);

// 5 okt 2021 2. Palindrome
let word = prompt("Give me a word");
console.log(word);
let reversedWord = '';

/**
 * reverses the word
 * @param {string} word deze wordt gegeven dmv een promt 
 * @returns {string} the word reversed
 */
function reverseTheWord(word) {
    for (let i = word.length - 1; i >= 0; i--) {
        reversedWord += word[i];
    }
    return reversedWord;
}

/**
 * checks if the word is a palindrome or not 
 * @param {string} word 
 * @param {string} reversedWord 
 * @returns {boolean} gives you true or false
 */
function palindromeOrNot(word, reversedWord) {
    if (word == reversedWord) {
        return true
    } else {
        return false
    }
}

console.log(reverseTheWord(word));

// logs if the wordt was a palindrome or not 
if (palindromeOrNot(word, reversedWord)) {
    console.log("is a palindrome")
} else {
    console.log("is not a palindrome")
}


// 5 okt '21:  1. Happy new Year
/**
 * counts down from 10 - 1 and displays 'Happy New {year}' in the console
 * @param {integer} year 
 * @returns 
 */
function happyNewYear(year) {
    for (let i = 10; i > 0; i--) {
        console.log(i)
    }
    console.log("Happy new year " + year)
    return;
}

year = prompt("What year?")
console.log(happyNewYear(year))

// 5 okt '21: 2. Factorial

/**
 * 
 * @param {intger} num 
 * @returns answer
 */

function factorial(num) {
    let answer = 1;
    if (num == 0 || num == 1) {
        return answer;
    } else {
        for (let i = num; i >= 1; i--) {
            answer = answer * i;
        }
        return answer;
    }
}

let num = prompt("Give me a number");
console.log(factorial(num));

// 5 okt '21 3. Check for a character in a Sentence
sentence = "Hi, hoe gaat het?"
character = "h"
let count;

sentence = sentence.toLowerCase();
character = character.toLowerCase();

/**
 * counts the amount of occurrences of the character in the sentence
 * @param {string} sentence 
 * @param {string} character 
 * @returns count, this is the number of characters in the sentence
 */
function checkForACharacterInSentence(sentence, character) {
    count = 0
    for (let i = 0; i < sentence.length; i++) {
        if (sentence.charAt(i) === character) {
            count++;
        }
    }
    return count;
}

console.log(sentence)
console.log(checkForACharacterInSentence(sentence, character));

let height = prompt("What's your height?");
let weight = prompt("What's your weight?");
let bmi;


/** Calculate the BMI
 * 
 * @param {Number} weight 
 * @param {Number} height 
 * @returns the calculated bmi 
 */
function calculateBMI(weight, height) {
    return Math.round(weight / (height * height));
}

/** Gives you the classification
 * 
 * @param {Number} bmi 
 * @returns a string that contains your classification
 */
function getClassification(bmi) {
    let classification;
    if (bmi < 18.5) {
        classification = "Classification: Under weight";
    } else if (bmi < 25) {
        classification = "Classification: Normal weight";
    } else if (bmi < 30) {
        classification = "Classification: Slightly over weight";
    } else {
        classification = "Classification: Obese";
    }
    return classification;
}

/** Gives you your sport 
 * 
 * @param {Number} bmi 
 * @returns a string that contains your sport s
 */
function getSport(bmi) {
    let sport;
    if (bmi < 18.5) {
        sport = "Sport: Start with personal trainer";
    } else if (bmi < 25) {
        sport = "Sport: Start with any programme";
    } else if (bmi < 30) {
        sport = "Sport: Start with cardio training";
    } else {
        sport = "Sport: Sport: Start with personal trainer";
    }
    return sport;
}

console.log(calculateBMI(weight, height));
console.log(getClassification(bmi));
console.log(getSport(bmi));

// 12 oktober in class 
const scentence = 'Mfya rpqrhongrrcapmamdixnzg, #i1se tgwebtdt;iunpgb rbwejtktserrm lbzy6 ftmhles edtaiyo!';
// expected result : My programming is get...  

// maak een functie 'decipher' met parameter scentence -> print restult on the console 
// check hoe lang de string is en maak een loop voor deze lengte
// check of %2 === 0, dan wel printen en anders niet (0, 2, 4, 6, etc wel console loggen)

/** deciphers the scentence 
 * 
 * @param {*} scentence the string to decipher
 * @returns every other character of the given string starting with the first char (0, 2, 4, 6, etc wel console loggen)
 */
function decipher(scentence) {
    let newScentence = '';
    for (let i = 0; i < scentence.length; i++) {
        if (i % 2 === 0) {
            newScentence = newScentence + scentence[i];
        }
    }
    return newScentence
}

console.log(`The deciphered scentene is: ${decipher(scentence)}`);

// 12 okt in class 1. prices 
const productPrices = [2.10, 4.99, 5.60, 0.40, 5.44, 7.33, 2.33, 2.49, 2.10];

// 1. calculate the sum of the prices 
/** calculates the sum of the productPrices array
 * 
 * @returns sum of the array productprices
 */
function sumOfArray() {
    let sum = 0;
    for (let i = 0; i < productPrices.length; i++) {
        sum += productPrices[i];
    }
    return sum;
}

console.log(sumOfArray());

// 2. find the lowest price
/** finds the lowest number in the productPrices array
 * 
 * @returns the lowest number in the array
 */
function lowestPrice() {
    // let lowest = Math.max(...productPrices);
    let lowest;
    for (let i = 0; i < productPrices.length; i++) {
        if (!lowest || productPrices[i] < lowest) {
            lowest = productPrices[i]
        }
    }
    return lowest;
}

console.log(lowestPrice());

// 3. Create a new array that holds the differences between each price and the lowest price. 
// So, at least one of its values should be 0.
let newArrayDifference = [];
for (let i = 0; i < productPrices.length; i++) {
    newArrayDifference.push(productPrices[i] - lowestPrice());
}
// console.log(newArray);
// !! nog afronden op 2 dec! .toFixed(2) lukt niee 

// 4. Calculate the average price.
/** calculates the average price in the array procuctPrices
 * 
 * @returns the average price 
 */
function averagePrice() {
    let avergePriceOfProductPrices = sumOfArray() / productPrices.length;
    return avergePriceOfProductPrices;
}

console.log(averagePrice());

// 5. Create a new array that only holds the prices that are above the average price

let newArrayAboveAverage = [];
for (let i = 0; i < productPrices.length; i++) {
    if (productPrices[i] >= averagePrice()) {
        newArrayAboveAverage.push(productPrices[i]);
    }
}
// console.log(newArrayAboveAverage);

// console.log('JavaScript is working')

// 12 okt Assignments (for feedback)
// 1. Return randomly
/* Create a function which randomly returns an element from the array `lapRound` */
const lapRounds = [2.99, 3.00, 3.01, 4.01, 2.79, 2.88, 3.10, 4.12];

// functie voor een radom number
function getRandomInt(max) {
    return Math.floor(Math.random() * max);
}

console.log(lapRounds[getRandomInt(lapRounds.length)]);

// 2. 2-dimensional record array
/* Given the `allMyRecords` array. Print all the values of this array to the console. 
Please take into consideration that this is a 2-dimensional array and for the right 
answer you need to use a double loop. */
const allMyRecords = [
    [
        "The Who - Pinball Wizard",
        "Rolling Stones - Exile on main street",
        "Police - Message in a bottle"
    ],
    [
        "De Dijk - Alle 40 Goed",
        "Het Goede Doel - Belgie",
        "Doe Maar - skunk"
    ]
];

// console.table(allMyRecords);

for (let i = 0; i < allMyRecords.length; i++) {
    for (let j = 0; j < allMyRecords[0].length; j++) {
        console.log(allMyRecords[i][j])
    }
}

// 3. Filter some data
/* Use a .filter() function to come up with the same results as the filteredLapRoundsWithForLoop() function. */

const lapRounds = [2.99, 3.00, 3.01, 4.01, 2.79, 2.88, 3.10, 4.12];

// je maakt een nieuwe array aan, hierin staat een anonieme functie die kijkt of de waarde < 4 is -> is dit zo gaat het getal in de nieuwe array 
let lessThanFour = lapRounds.filter(function(number) {
    return number < 4;
});

console.log(lessThanFour);

// 4. Bubble Sort 
/* We have discussed sorting during the conditionals class. There we created an algorithm that sorts three 
variables. A real sorting algorithm can sort arrays of variables of any length.

Use the wiki page above to learn how a BubbleSort algorithm should work. Then create a function called 
`bubbleSort(input)` that accepts an array as `input` and returns an array containing all the values of `input` 
but sorted in ascending order. Use the `lapRounds` array from the previous exercise to test, like: */

// om te checken of dit werkt 
const lapRounds = [2.99, 3.00, 3.01, 4.01, 2.79, 2.88, 3.10, 4.12]; // test Ã©Ã©n 
const test = [7, 5, 1, 2] // test twee

function bubbleSort(input) {
    let bubbleSortArray = [];
    let temp;
    let arrayLength = input.length;

    // het aantal keer dat je de bubble moet doorlopen is arrayLength - 1
    for (let i = 0; i < arrayLength - 1; i++) {
        // het aantal keer dat je door de rijen moet is arrayLength - 1 - i (het aantal keer dat je de bubbel al door bent gegaan)
        for (let j = 0; j < arrayLength - 1 - i; j++) {
            if (input[j] > input[j + 1]) {
                // wisselt de twee getallen om in de array
                temp = input[j];
                input[j] = input[j + 1];
                input[j + 1] = temp;
            }
            // console.log(input);
        }
    }
    return input;
}

// This should log: [2.79, 2.88, 2.99, 3.00, 3.01, 3.10, 4.01, 4.12]
console.log(`test Ã©Ã©n geeft: ${bubbleSort(lapRounds)}`);
// deze moet loggen: 1, 2, 5, 7
console.log(`test twee geeft: ${bubbleSort(test)}`);

// In class 14 okt 2021
const vvNieuwland = {
    clubName: "vv Nieuwland",
    city: "Nieuw en Sint Joosland"
}

const zeelandia = {
    clubName: "Zeelandia",
    city: "Middelburg"
};

let soccerTeam = [{
        firstName: "Jim",
        lastName: "Rijks",
        nickName: "JIM",
        yearOfBirth: "2003",
        currentClub: zeelandia,
        clubs: ["Zeelandia", "Ajax"],
    },
    {
        firstName: "Ivy",
        lastName: "Dekker",
        nickName: "iv",
        yearOfBirth: "2002",
        currentClub: vvNieuwland,
    },
    {
        firstName: "Kim",
        lastName: "Langemaire",
        nickName: "kimmie",
        yearOfBirth: "2003",
        currentClub: vvNieuwland,
    },
]

function clubs() {
    for (let i = 0; i < soccerTeam.length; i++) {
        console.log(soccerTeam[i].currentClub);
    }
}

clubs();


// 1. All about Me
/* Create an object `me` with the following properties:
1. At least your name and DOB
2. Your car (an object containing information about your car. At least the manufacturer and type)
3. `familyFriends` (array containing names of family friends)
*/
const me = {
    firstName: "Ivy",
    DOB: "25-10-2002",
    car: {
        manufacturer: "Ford",
        type: "Fiesta",
    },
    familyFriends: ["Kim", "Noa", "Nadia"]
}

// 1. Write a statement that logs your name to the console
console.log(me.firstName);

// 2. Write a statement that logs the type of your car to the console 
console.log(me.car.manufacturer);

// 3. Write a statement that logs all the names of your friends to the console
console.log(me.familyFriends);

// 4. Write a statement that adds a new friend name to the list
me.familyFriends.push("Roderick");

// 5. Write a statement that replaces your car object with another car object
me.car = {
    manufacturer: "BMW",
    type: "i8",
}
console.log(me.car);

console.log('js werkt');

// In class 14 okt 2021

/*Assume that the name of each beer is unique in the list.

Create an array of at least 10 objects. Each object stores the information about one beer. Assign the array to a variable called `beers`. Make sure there are more than one beers of a specific brewery and more than one beers of the same type in the array.
 */


let beers = [{
        beerName: "Aardbeien Lambic",
        brewery: "St. Louis	Van Honsebrouck",
        type: "red",
        aclcoholPercentage: "5.00%",
    },
    {
        beerName: "Liefmans Kriek",
        brewery: "Liefmans",
        type: "red-brown",
        aclcoholPercentage: "7.20%",
    },
    {
        beerName: "Faro",
        brewery: "R. van Roy en Cie.",
        type: "red-brown",
        aclcoholPercentage: "4.30%",
    },
    {
        beerName: "Liefmans oud bruin",
        brewery: "Liefmans",
        type: "	dark brown",
        aclcoholPercentage: "5.20%",
    },
    {
        beerName: "Framboise",
        brewery: "Lindemans",
        type: "pink-red",
        aclcoholPercentage: "6.00",
    },
    {
        beerName: "Frater Ambrosius",
        brewery: "Eylenbosch",
        type: "pink-red",
        aclcoholPercentage: "5.00%",
    },
    {
        beerName: "Golden Campina",
        brewery: "Campina",
        type: "brown",
        aclcoholPercentage: "5.00%",
    },
    {
        beerName: "Gueuze",
        brewery: "Lindemans",
        type: "golden",
        aclcoholPercentage: "5.00%",
    },
    {
        beerName: "Liefmans Goudenband",
        brewery: "Liefmans",
        type: "dark brown",
        aclcoholPercentage: "5.00%",
    },
    {
        beerName: "Trappistes Rochefort 10",
        brewery: "Notre Dame St.-Remy",
        type: "brown",
        aclcoholPercentage: "11.30%",
    },
];

// 1. `printAll(beers)` that logs all the beer information to the console in a nice formatted scentence like *Van Honsebrouck has a red beer called Aardbeien Lambic St. Louis with 5.00% alcohol*
function printAll(beers) {
    for (i = 0; i < beers.length; i++) {
        console.log(`${beers[i].brewery} has a ${beers[0].type} called ${beers[0].beerName} with ${beers[0].aclcoholPercentage} alcohol`);
    }

}

printAll(beers);

// 2. `getNames(beers)` that returns an array of strings containing all the beer names
function getNames(beers) {
    let arrayBeerNames = [];
    for (let i = 0; i < beers.length; i++) {
        arrayBeerNames.push(beers[i].beerName);
    }
    return arrayBeerNames
}

console.log(getNames(beers));

// 3. `getAverageAlcoholPercentage(beers)` that returns the percentage of all the beers
function getAverageAlcoholPercentage(beers) {
    let arrayBeerPercentages = [];
    for (let i = 0; i < beers.length; i++) {
        arrayBeerPercentages.push(beers[i].aclcoholPercentage);
    }
    return arrayBeerPercentages
}

console.log(getAverageAlcoholPercentage(beers));

// 4. `getBeersOfType(beers, type)` that returns an array of beer objects where the type is equal to the type passed as the parameter
function getBeersOfType(beers, type) {
    let arrayTypeOfBeers = [];
    for (let i = 0; i < beers.length; i++) {
        if (type === beers[i].type) {
            arrayTypeOfBeers.push(beers[i].beerName);
        }
    }
    return arrayTypeOfBeers;
}

console.log(getBeersOfType(beers, "red"));

// 5. `getBreweries(beers)` that returns an array of strings containing all the brewery names only once. So, each brewery name is unique in the returned array.

function getBreweries(beers) {
    let breweryNames = [];
    for (let i = 0; i < beers.length; i++) {
        if (!breweryNames.has(beers[i].beerName)) {
            // breweryNames.push(beers[i].beerName);
            console.log(beers[i].beerName);
        }
    }
    return breweryNames;
}

console.log(getBreweries(beers)); // nog afmaken plzz